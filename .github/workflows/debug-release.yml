name: Debug Release Test

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:  # Tillater manuell kjÃ¸ring

permissions:
  contents: write

jobs:
  debug:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug - List all files
      run: |
        echo "=== All PHP files ==="
        find . -name "*.php" -type f
        echo ""
        echo "=== Content of main plugin file ==="
        cat bd-product-sheet-editor-pro.php | head -20
        echo ""

    - name: Debug - Test version extraction
      run: |
        echo "=== Testing version extraction ==="
        VERSION=$(grep -E "Version:\s*[0-9]+\.[0-9]+(\.[0-9]+)?" *.php | head -1 | grep -oE "[0-9]+\.[0-9]+(\.[0-9]+)?")
        echo "Found version: '$VERSION'"
        if [ -z "$VERSION" ]; then
          echo "ERROR: No version found!"
          echo "=== All Version lines found ==="
          grep -i "version" *.php || echo "No version lines found"
        else
          echo "SUCCESS: Version found: $VERSION"
        fi

    - name: Debug - Check existing tags
      run: |
        echo "=== Existing tags ==="
        git tag || echo "No tags found"
        echo ""
        echo "=== Git log ==="
        git log --oneline -5

    - name: Debug - Test release creation (if version found)
      run: |
        VERSION=$(grep -E "Version:\s*[0-9]+\.[0-9]+(\.[0-9]+)?" *.php | head -1 | grep -oE "[0-9]+\.[0-9]+(\.[0-9]+)?")
        if [ ! -z "$VERSION" ]; then
          echo "Would create release for version: v$VERSION"
          if git tag | grep -q "^v$VERSION$"; then
            echo "Tag v$VERSION already exists - would skip release"
          else
            echo "Tag v$VERSION does not exist - would create release"
          fi
        fi

  create-test-release:
    runs-on: ubuntu-latest
    needs: debug
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version
      id: version
      run: |
        VERSION=$(grep -E "Version:\s*[0-9]+\.[0-9]+(\.[0-9]+)?" *.php | head -1 | grep -oE "[0-9]+\.[0-9]+(\.[0-9]+)?")
        if [ -z "$VERSION" ]; then
          echo "No version found, using timestamp"
          VERSION="test-$(date +%Y%m%d-%H%M%S)"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Using version: $VERSION"

    - name: Check if release exists
      id: check_release
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        if git tag | grep -q "^v$VERSION$"; then
          echo "release_exists=true" >> $GITHUB_OUTPUT
          echo "Release v$VERSION already exists"
        else
          echo "release_exists=false" >> $GITHUB_OUTPUT
          echo "Release v$VERSION does not exist"
        fi

    - name: Create plugin ZIP
      if: steps.check_release.outputs.release_exists == 'false'
      run: |
        REPO_NAME=$(basename $GITHUB_REPOSITORY)
        mkdir -p temp/$REPO_NAME
        
        # Copy all files except git and temp
        rsync -av --exclude='.git*' --exclude='temp' --exclude='node_modules' . temp/$REPO_NAME/
        
        cd temp
        zip -r ../$REPO_NAME.zip $REPO_NAME
        cd ..
        
        echo "Created ZIP file:"
        ls -la $REPO_NAME.zip

    - name: Create Test Release
      if: steps.check_release.outputs.release_exists == 'false'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: "ðŸ§ª Test Release v${{ steps.version.outputs.version }}"
        body: |
          ## ðŸ§ª Test Release
          
          Dette er en test-release for Ã¥ verifisere at GitHub Actions fungerer.
          
          **Versjon**: ${{ steps.version.outputs.version }}
          **Opprettet**: ${{ github.event.head_commit.timestamp }}
          **Commit**: ${{ github.sha }}
          
          ### Filer inkludert:
          - Komplett plugin ZIP-fil
          - Alle nÃ¸dvendige filer for WordPress
          
          ---
          *ðŸ¤– Automatisk generert av GitHub Actions (Debug)*
        draft: false
        prerelease: true  # Marker som prerelease for testing
        files: ./${{ github.event.repository.name }}.zip
        token: ${{ secrets.GITHUB_TOKEN }}